name: Publish Beta Package

on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches:
      - main

jobs:
  publish-beta:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Build
        run: npm run build

      - name: Get next beta version
        id: get-version
        run: |
          # Get package name from package.json
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "Package name: $PACKAGE_NAME"

          # Get current base version from package.json
          BASE_VERSION=$(node -p "require('./package.json').version")
          echo "Base version from package.json: $BASE_VERSION"

          # Get latest beta version from npm
          LATEST_BETA=$(npm view "${PACKAGE_NAME}@beta" version 2>/dev/null || echo "")
          
          if [ -z "$LATEST_BETA" ] || [ "$LATEST_BETA" = "null" ]; then
            # No beta exists, create first beta from base version
            NEXT_VERSION="${BASE_VERSION}-beta.1"
          else
            echo "Current beta version: $LATEST_BETA"
            # Extract beta number and increment
            BETA_NUM=$(echo $LATEST_BETA | grep -o 'beta\.[0-9]*' | cut -d'.' -f2)
            NEXT_BETA=$((BETA_NUM + 1))
            NEXT_VERSION="${BASE_VERSION}-beta.${NEXT_BETA}"
          fi

          echo "Next beta version will be: $NEXT_VERSION"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          npm version ${{ steps.get-version.outputs.next_version }} --no-git-tag-version

      - name: Publish beta to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTOMATION_TOKEN }}" > .npmrc
          npm publish --access public --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}

      - name: Create beta release summary
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Published beta version: $PACKAGE_VERSION"
          echo "Install with: npm install @yhattav/react-component-cursor@beta"
